<p>I recently had the opportunity to work on a handful of email marketing campaigns during my employment at BeCreative360. I redesigned some of the company's own templates as well as built several newsletters and monthly promotions for the customers they serve. It was an enlightening experience as I hadn't done too much with emails in the past. I learned a lot of the "best practices", and through some trial and error I also found things to avoid in the future. I'm writing this post to outline some of what I've learned from this experience, both for my own reference as well as a guide for anybody else jumping into this for the first time.</p><p>First and foremost, email clients do not render html the way you think they would. The majority of them are still stuck in the early 2000's and are unable to utilize any of the newer HTML5 or CSS3 features that we've come to love. The worst of the bunch is Outlook. The Microsoft based email client used to display html on par with the rest, but in 2007 they oddly decided to switch to the Microsoft Word rendering engine, and still do even in the most up to date versions of the program. Our clients specifically needed Outlook support, so there was no chance I could just ignore this issue.</p><p>This meant that I was pretty limited on what features I could add into these emails, or at least limited in how I could create these featuresâ€¦hacks! Any kind of CSS3 effect that needed to be used could be done using only images. Rounded corners? Image. Box shadow? Image. Mason brick layouts? IMAGE.</p><p>Unlearn everything you know about web design. That was my mantra when going through these designs. Going back to the days of inline styling and table based layouts was the safest way to make the newsletters show up correctly in every email client. It's always a little strange trying to remember table syntax after working hard to get it out of my head years before, but after a few tries you figure out that TDs nest within TRs and the whole thing slowly came back.</p><p>Like I said before, the best way to ensure your emails look consistent across all systems is to build the majority of it out of images, and cutting them up when you need to add links. Of course this introduces a few other problems.. for one, loading times will be significantly longer because of all the http requests and the time spent actually rendering the images. In an ordinary website job I'd just fix that by using image sprites. Unfortunately that doesn't work for emails as many systems don't support background images. So the only thing left is optimizing the images as well as you can, and using JPEGs can help, as they are generally more compressed than PNGs. Oh did I mention that most email clients can't even render PNGs, so you're stuck with JPEGs weather you like it or not. Secondly slicing images to create layouts can have trouble lining up correctly, little white lines of space will come between images, sometimes only in a select few email clients. Luckily there are ways to combat this. The biggest thing that will help is to avoid slicing the images vertically. Some clients, particularly Outlook will space those out but won't on horizontally sliced layouts. Additionally, and this really should go without saying, but make sure that there is no spacing on your tables. Set the cell padding and border to 0px. Lastly, if nothing else has worked, set the font size for that cell to 0px. This one is rare, but every once in a while it will be the one thing that fixes these layouts.</p><p>And that's about it. As long as you follow these general guidelines you'll have a well functioning html email. So to sum up here are the main points to remember about html emails...</p><p>1: No HTML5 or CSS3</p><p>2: Use tables and inline styling</p><p>3: For best results use images instead of effects</p><p>4: Slice images horizontally, no borders or padding, font size 0px</p><p>If you make anything based on these tips send me a link to it, I love seeing different people's approaches to email design. Have fun creating!</p>